#!/bin/bash -e
PIDFILE=/tmp/upload.pid

source $HOME/.params
export DB

sql() {
  sqlite3 $DB "$@"
}

remove() {
  sql "UPDATE files SET state=1 WHERE filename='$1'"
}

filecount() {
  sql "SELECT COUNT(*) FROM files WHERE state=0"
}

if [ ! -f $DB ];then
  sql "create table files (filename TEXT PRIMARY KEY NOT NULL, state INTEGER, mtime INTEGER)"
fi

if [ -r $PIDFILE ];then
  OLDPID=`cat $PIDFILE`
  if kill -0 $OLDPID &>/dev/null;then
    echo "Uploader is still running! ($OLDPID)" >/tmp/upload.$$
    exit -1
  fi 
fi

echo $$ >$PIDFILE

echo "Environment: scandir: '$DIR' ftp server: '$FTP'"
if [ -z "$FTP" -o -z "$DIR" ];then
  echo "Set environment!"
  exit -1
fi


findsort.py $DIR
FILECOUNT=`filecount`
echo "Found $FILECOUNT files to upload."

while [ `filecount` -gt 4 ]; do
  FILE=`sql "SELECT filename FROM files WHERE state=0 ORDER BY mtime LIMIT 1"`
  MTIME=`stat "$FILE" --printf "%Y"`
  NEWNAME=${PREFIX}`date --date=@$MTIME "+%Y%m%d_%H%M%S"`.mp4
  echo "Uploading $FILE with new name $NEWNAME"
  curl --tcp-nodelay -n -T $FILE ftp://$FTP/$NEWNAME && remove $FILE
  if [ $? == 0 ];then
    echo "Upload OK"
  else
    echo "Upload FAILED"
  fi
done

rm $PIDFILE
